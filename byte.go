// Code generated by go generate
// This file was generated by robots at 2017-07-25 13:05:50.995030888 +0000 UTC

package optional

// Byte is an optional byte
type Byte struct {
	byte    byte
	present bool
}

// EmptyByte returns an empty optional.Byte
func EmptyByte() Byte {
	return Byte{}
}

// OfByte creates a optional.Byte from a byte
func OfByte(b byte) Byte {
	return Byte{byte: b, present: true}
}

// Set sets the byte value
func (o *Byte) Set(b byte) {
	o.byte = b
	o.present = true
}

// Get returns the byte value
func (o *Byte) Get() byte {
	return o.byte
}

// Present returns whether or not the value is present
func (o *Byte) Present() bool {
	return o.present
}

// OrElse returns the byte value or a default value if the value is not present
func (o *Byte) OrElse(b byte) byte {
	if o.present {
		return o.byte
	}
	return b
}

// If calls the function f with the value if the value is present
func (o *Byte) If(f func(b byte)) {
	if o.present {
		f(o.byte)
	}
}
