// Code generated by go generate
// This file was generated by robots at 2017-07-24 00:18:31.320713126 +0000 UTC

package foo

// OptionalFoo is an optional Foo
type OptionalFoo struct {
	foo     Foo
	present bool
}

// EmptyOptionalFoo returns an empty foo.OptionalFoo
func EmptyOptionalFoo() OptionalFoo {
	return OptionalFoo{}
}

// OfFoo creates a foo.OptionalFoo from a Foo
func OfFoo(f Foo) OptionalFoo {
	return OptionalFoo{foo: f, present: true}
}

// Set sets the Foo value
func (o *OptionalFoo) Set(f Foo) {
	o.foo = f
	o.present = true
}

// Get returns the Foo value
func (o *OptionalFoo) Get() Foo {
	return o.foo
}

// Present returns whether or not the value is present
func (o *OptionalFoo) Present() bool {
	return o.present
}

// OrElse returns the Foo value or a default value if the value is not present
func (o *OptionalFoo) OrElse(f Foo) Foo {
	if o.present {
		return o.foo
	}
	return f
}
