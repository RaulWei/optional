// Code generated by go generate
// This file was generated by robots at 2017-10-01 20:30:13.726556163 +0000 UTC

package optional

import "errors"

// Uint8 is an optional uint8
type Uint8 struct {
	value *uint8
}

// OfUint8 creates a optional.Uint8 from a uint8
func OfUint8(v uint8) Uint8 {
	return Uint8{&v}
}

// Set sets the uint8 value
func (u Uint8) Set(v uint8) {
	u.value = &v
}

// Get returns the uint8 value or an error if not present
func (u Uint8) Get() (uint8, error) {
	if u.value == nil {
		return *u.value, errors.New("value not present")
	}
	return *u.value, nil
}

// Present returns whether or not the value is present
func (u Uint8) Present() bool {
	return u.value != nil
}

// OrElse returns the uint8 value or a default value if the value is not present
func (u Uint8) OrElse(v uint8) uint8 {
	if u.Present() {
		return *u.value
	}
	return v
}

// If calls the function f with the value if the value is present
func (u Uint8) If(fn func(uint8)) {
	if u.Present() {
		fn(*u.value)
	}
}
