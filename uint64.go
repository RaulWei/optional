// Code generated by go generate
// This file was generated by robots at 2017-10-01 20:30:14.607662042 +0000 UTC

package optional

import "errors"

// Uint64 is an optional uint64
type Uint64 struct {
	value *uint64
}

// OfUint64 creates a optional.Uint64 from a uint64
func OfUint64(v uint64) Uint64 {
	return Uint64{&v}
}

// Set sets the uint64 value
func (u Uint64) Set(v uint64) {
	u.value = &v
}

// Get returns the uint64 value or an error if not present
func (u Uint64) Get() (uint64, error) {
	if u.value == nil {
		return *u.value, errors.New("value not present")
	}
	return *u.value, nil
}

// Present returns whether or not the value is present
func (u Uint64) Present() bool {
	return u.value != nil
}

// OrElse returns the uint64 value or a default value if the value is not present
func (u Uint64) OrElse(v uint64) uint64 {
	if u.Present() {
		return *u.value
	}
	return v
}

// If calls the function f with the value if the value is present
func (u Uint64) If(fn func(uint64)) {
	if u.Present() {
		fn(*u.value)
	}
}
