// Code generated by go generate
// This file was generated by robots at 2017-10-01 20:44:15.450880729 +0000 UTC

package optional

import "errors"

// Int16 is an optional int16
type Int16 struct {
	value *int16
}

// NewInt16 creates a optional.Int16 from a int16
func NewInt16(v int16) Int16 {
	return Int16{&v}
}

// Set sets the int16 value
func (i Int16) Set(v int16) {
	i.value = &v
}

// Get returns the int16 value or an error if not present
func (i Int16) Get() (int16, error) {
	if !i.Present() {
		return *i.value, errors.New("value not present")
	}
	return *i.value, nil
}

// Present returns whether or not the value is present
func (i Int16) Present() bool {
	return i.value != nil
}

// OrElse returns the int16 value or a default value if the value is not present
func (i Int16) OrElse(v int16) int16 {
	if i.Present() {
		return *i.value
	}
	return v
}

// If calls the function f with the value if the value is present
func (i Int16) If(fn func(int16)) {
	if i.Present() {
		fn(*i.value)
	}
}
