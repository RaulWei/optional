// Code generated by go generate
// This file was generated by robots at 2017-10-01 20:30:12.201090201 +0000 UTC

package optional

import "errors"

// Int8 is an optional int8
type Int8 struct {
	value *int8
}

// OfInt8 creates a optional.Int8 from a int8
func OfInt8(v int8) Int8 {
	return Int8{&v}
}

// Set sets the int8 value
func (i Int8) Set(v int8) {
	i.value = &v
}

// Get returns the int8 value or an error if not present
func (i Int8) Get() (int8, error) {
	if i.value == nil {
		return *i.value, errors.New("value not present")
	}
	return *i.value, nil
}

// Present returns whether or not the value is present
func (i Int8) Present() bool {
	return i.value != nil
}

// OrElse returns the int8 value or a default value if the value is not present
func (i Int8) OrElse(v int8) int8 {
	if i.Present() {
		return *i.value
	}
	return v
}

// If calls the function f with the value if the value is present
func (i Int8) If(fn func(int8)) {
	if i.Present() {
		fn(*i.value)
	}
}
